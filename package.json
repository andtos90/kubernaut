{
  "name": "kubernaut",
  "version": "1.0.0",
  "description": "Manages kubernetes deployments",
  "main": "server/build/index.js",
  "config": {
    "kubernaut": {
      "registry": "payments",
      "containerPort": 3001
    }
  },
  "scripts": {
    "start": "concurrently 'npm run start-server' 'npm run start-client'",
    "start-server": "npm run start-server-dependencies && nodemon server/index.js --exec babel-node --ignore client/",
    "start-client": "cd client; npm start",
    "start-server-dependencies": "docker-compose up -d local-dependencies",
    "test": "npm run test-server && npm run test-client",
    "test-server": "mocha --opts server/test/mocha.opts server/test/**/*.test.js",
    "test-server-w": "mocha --watch --opts server/test/mocha.opts server/test/**/*.test.js",
    "test-client": "cd client; npm test",
    "test-client-w": "cd client; npm run test-w",
    "test-client-i": "cd client; npm run test-i",
    "load-test-data": "babel-node ./server/test/bin/load-test-data.js",
    "build": "concurrently 'npm run build-server' 'npm run build-client'",
    "build-server": "rm -rf server/build && babel --out-dir server/build ./server --source-maps --copy-files && rsync -avv --include '.marvrc' --include '*/' --exclude='*' server/lib server/build && echo '\nCurse you github.com/babel/babel/issues/5052 !!!!\n'",
    "build-client": "cd client; npm run build",
    "precommit": "npm run lint && npm run check-package-lock",
    "prepush": "IMAGE=kubernaut TAG=$(git rev-parse --short HEAD)-local docker-compose run --rm --entrypoint npm build-kubernaut run test-server -- --ci --bail --no-colors --verbose",
    "lint": "eslint .",
    "check-package-lock": "grep -qc tescloud package-lock.json; test $? -gt 0",
    "create-key": "create-key",
    "kube-release": "release",
    "kube-deploy": "deploy",
    "kube-status": "status",
    "create-bearer-token": "./bin/create-bearer-token.js"
  },
  "author": "TES",
  "license": "MIT",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-plugin-stack-trace-sourcemap": "^1.0.2",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-stage-3": "^6.24.1",
    "chance": "^1.0.11",
    "cheerio": "^1.0.0-rc.2",
    "concurrently": "^3.5.0",
    "eslint": "^4.4.1",
    "eslint-config-imperative-es6": "^2.0.0",
    "eslint-plugin-react": "^7.2.0",
    "expect": "^22.4.3",
    "husky": "^0.14.3",
    "mocha": "^5.1.1",
    "nodemon": "^1.11.0",
    "p-limit": "^1.1.0",
    "request": "^2.81.0",
    "request-promise": "^4.2.1",
    "source-map-support": "^0.5.5"
  },
  "dependencies": {
    "async": "^2.6.0",
    "body-parser": "^1.17.2",
    "boom": "^5.2.0",
    "bunyan": "^1.8.12",
    "chalk": "^2.1.0",
    "confabulous": "^1.5.3",
    "connect-pg-simple": "^5.0.0",
    "cryptus": "^1.2.0",
    "elastic-apm-node": "^1.0.0",
    "express-session": "^1.15.6",
    "groundhog-day": "^1.1.1",
    "highwayhash": "^2.2.0",
    "hogan.js": "^3.0.2",
    "is-css-color-hex": "^0.2.0",
    "is-css-color-name": "^0.1.3",
    "js-yaml": "^3.10.0",
    "lodash.get": "^4.4.2",
    "lodash.has": "^4.5.2",
    "lodash.intersection": "^4.4.0",
    "lodash.merge": "^4.6.0",
    "lodash.omit": "^4.5.0",
    "lodash.pick": "^4.4.0",
    "lodash.uniq": "^4.5.0",
    "lru-cache": "^4.1.1",
    "marv": "^2.0.0",
    "marv-pg-driver": "^2.0.0",
    "multer": "^1.3.0",
    "on-headers": "^1.0.1",
    "passport": "^0.4.0",
    "passport-custom": "^1.0.5",
    "passport-github": "^1.1.0",
    "passport-http-bearer": "^1.0.1",
    "power-merge": "^1.0.3",
    "prepper": "^1.1.0",
    "ramda": "^0.24.1",
    "safe-json-parse": "^4.0.0",
    "sqb": "^2.0.3",
    "sqb-serializer-pg": "^0.4.1",
    "systemic": "^3.0.0",
    "systemic-domain-runner": "^1.1.0",
    "systemic-express": "^1.1.1",
    "systemic-pg": "^2.0.0",
    "uuid": "^3.1.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tes/kube-hackday.git"
  },
  "bugs": {
    "url": "https://github.com/tes/kube-hackday/issues"
  },
  "homepage": "https://github.com/tes/kube-hackday#readme"
}
